name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write  # This is the key fix!

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Set clean version
      id: clean_version
      run: |
        VERSION=${{ steps.version.outputs.VERSION }}
        CLEAN_VERSION=$(echo $VERSION | sed 's/^v//')
        echo "CLEAN_VERSION=$CLEAN_VERSION" >> $GITHUB_OUTPUT

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y zip unzip

    - name: Build binaries
      run: |
        export VERSION=${{ steps.version.outputs.VERSION }}
        make build-all

    - name: Create packages
      run: |
        export VERSION=${{ steps.version.outputs.VERSION }}
        make package

    - name: Generate release artifacts
      run: |
        export VERSION=${{ steps.version.outputs.VERSION }}
        make release

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: KeyNginx ${{ steps.version.outputs.VERSION }}
        body: |
          ## KeyNginx ${{ steps.version.outputs.VERSION }}
          
          üöÄ **Complete SSL-enabled Nginx automation**
          
          ### Download Options
          
          #### Windows
          - **Windows 64-bit**: `keynginx-${{ steps.clean_version.outputs.CLEAN_VERSION }}-windows-amd64.zip`
          - **Windows 32-bit**: `keynginx-${{ steps.clean_version.outputs.CLEAN_VERSION }}-windows-386.zip`
          
          #### macOS
          - **Intel Mac**: `keynginx-${{ steps.clean_version.outputs.CLEAN_VERSION }}-darwin-amd64.tar.gz`
          - **Apple Silicon**: `keynginx-${{ steps.clean_version.outputs.CLEAN_VERSION }}-darwin-arm64.tar.gz`
          
          #### Linux
          - **Debian/Ubuntu**: `keynginx-${{ steps.clean_version.outputs.CLEAN_VERSION }}-amd64.deb`
          - **Linux 64-bit**: `keynginx-${{ steps.clean_version.outputs.CLEAN_VERSION }}-linux-amd64.tar.gz`
          - **Linux ARM64**: `keynginx-${{ steps.clean_version.outputs.CLEAN_VERSION }}-linux-arm64.tar.gz`
          
          ### Installation
          
          #### Quick Install (Linux/macOS)
          ```bash
          curl -fsSL https://github.com/sinhaparth5/keynginx/releases/download/${{ steps.version.outputs.VERSION }}/install.sh | sh
          ```
          
          #### Manual Install
          1. Download the appropriate package for your platform
          2. Extract the archive
          3. Run the install script or copy the binary to your PATH
          
          ### What's New
          - SSL certificate generation with proper SAN support
          - Production-ready Nginx configurations
          - Complete Docker container lifecycle management
          - Multi-service reverse proxy support
          - Real-time monitoring and logging
          
          ### Verification
          All packages include SHA256 checksums in `checksums.txt`
          
          ### System Requirements
          - Docker Desktop (Windows/macOS) or Docker Engine (Linux)
          - Available ports: 8443 (HTTPS), 8080 (HTTP)
          
          ---
          
          **Built with ‚ù§Ô∏è in Go** | **Powered by Nginx & Docker**
        files: release/*
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}